plugins {
	id 'org.springframework.boot' version '2.3.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id "com.moowork.node" version "1.3.1"
	id 'java'
}

group = 'vizzyy.react'
version = '0.0.41-SNAPSHOT'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

repositories {
	mavenCentral()
}

dependencies {
	compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.12'
	compile group: 'commons-io', name: 'commons-io', version: '2.6'
	implementation platform('com.amazonaws:aws-java-sdk-bom:1.11.228')
	implementation 'com.amazonaws:aws-java-sdk-s3'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.session:spring-session-core'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'mysql:mysql-connector-java'
	runtimeOnly 'com.h2database:h2'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

// Read more about how to configure the plugin from
// https://github.com/srs/gradle-node-plugin/blob/master/docs/node.md
node {
	download = true

	// Set the work directory for unpacking node
	workDir = file("${project.buildDir}/nodejs")

	// Set the work directory for NPM
	npmWorkDir = file("${project.buildDir}/npm")
}

task appNpmInstall(type: NpmTask) {
	description = "Installs all dependencies from package.json"
	workingDir = file("${project.projectDir}/src/main/frontend")
	args = ["install"]
}

task appNpmBuild(type: NpmTask) {
	description = "Builds production version of the webapp"
	workingDir = file("${project.projectDir}/src/main/frontend")
	args = ["run", "build"]
}

task copyWebApp(type: Copy) {
	from 'src/main/frontend/build'
	into 'build/resources/main/static/.'
}

copyWebApp.dependsOn appNpmBuild

// comment this out for local development -- since
// webpack is already running we don't need to force
// a frontend-compile every time we backend-compile
compileJava.dependsOn copyWebApp
appNpmBuild.dependsOn appNpmInstall
